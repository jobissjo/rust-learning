## Increment a character of alphabet ##

let mut mychar: char = 'a';
mychar = (mychar as u8 + 1) as char;

## if we convetr a char num to num as type casting --> it will give original value the char
so we need to parse char or str to the int

// let string_vec: Vec<&str> = value
//     .iter()
//     .map(|s| s.to_string())
//     .map(|n| n.as_str())
//     .collect();
// result.clone_from_slice(&string_vec);

// for n in mystr.chars() {
//     let temp_num = n as i32;
//     if let Some(value) = map.get(&temp_num) {
//         for i in value {}
//     }
// }


//; ##########################################

// let mut my_num = 0;
    // if my_str.len() == 1 {
    //     match my_str.parse::<i32>() {
    //         Ok(num) => {
    //             my_num = num;
    //         }
    //         Err(_) => {
    //             println!("Failed to parse integer");
    //         }
    //     }

    //     if let Some(value) = map.get(&my_num) {
    //         for n in value {
    //             let s = n.to_string();
    //             result.push(s);
    //         }
    //     }
    // } else 

